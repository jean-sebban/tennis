---
title: "Projet de Data Science"
author: "Jean Sebban, Fally et Guillaume Allard"
format: revealjs
editor: visual
---

# Problématique

1.  Construire un modèle permettant de prédire le résultat d'un match de tennis en simple, à partir d'informations sur les 2 joueurs qui s'affrontent et sur le tournoi.

2.  Classification supervisée : prédire Y (0 ou 1), à partir de variables explicatives quantitatives et qualitatives.

# Constitution de la base des matches

## Importation des fichiers

Les fichiers source ont été récupérés sur le site [datahub](https://datahub.io/sports-data/atp-world-tour-tennis-data) :

-   **Matches :** stats et scores de 1991 à 2017 (n = 95 610)
-   **Joueurs :** (n = 10 912)
-   **Classements** (n = 2 694 539)
-   **Tournois** (n = 4 114)

## Calcul des stats sur les précédents matches

Stats calculées sur les 5 précédents matches, pour chaque joueur (winner et loser) :

-   Nombre de matches gagnés

-   Pourcentage d'aces

-   Pourcentage de double fautes

-   Pourcentage de premier service

-   Pourcentage de points gagnés au premier service

-   Pourcentage de points gagnés au deuxième service

## Enrichissement de la base des matches

-   A partir de la base des **joueurs** (taille, poids et âge)

-   A partir de la base des **tournois** :

    -   surface (terre battue, gazon, dur, moquette)

    -   conditions (intérieur ou extérieur)

-   A partir de la base des **classements** (classements au moment du match + diff de classement)

Le fichier est constitué de 23 variables explicatives (dont 20 associées aux 2 joueurs)

## Preprocessing avant modélisation

-   Ajout de la variable target (**Y = 1**)

-   Duplication de la base : **n = 191 220 matches**

-   Traitement des valeurs manquantes (**n = 158 870**)

-   Nettoyage final (mise en factor, traitement anomalies) : **n = 149 852**

# Exploration de la base

```{r}
library(skimr)
library(dplyr)
```

## Statistiques descriptives univariées

```{r}
don <- readRDS("./data/don_sansNA.rds") %>% 
  select(-starts_with("match")) %>% 
  filter(tourney_surface != "Carpet") #on enlève les matches sur moquette
```

```{r,echo=TRUE}

summary(don)
```

## ACP : inertie expliquée par les axes

```{r}
library(FactoMineR)
set.seed(1234)
res.pca <- PCA(sample_n(don, 1000)[,-c(22,23)],
               quali.sup = 1,
               quanti.sup = 22,
               graph = FALSE)
```

```{r,echo=TRUE}
barplot(res.pca$eig[,2],names.arg = paste("",1:nrow(res.pca$eig)))
```

## ACP : graphe des variables

```{r,echo=TRUE}
plot(res.pca,choix = "var")
```

## ACP : description des axes

```{r,echo=TRUE}
dimdesc(res.pca)
```

# Comparaison des modèles

# Généralisation du modèle
